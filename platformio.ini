; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = t-watch2020-v1

[env:emulator_m5paper]
platform = native@^1.1.3
extra_scripts = support/sdl2_build_extra.py
build_flags =
  ${env.build_flags}
  ; Add recursive dirs for hal headers search
  ;!python -c "import os; print(' '.join(['-I {}'.format(i[0].replace('\x5C','/')) for i in os.walk('hal/sdl2')]))"
  -lSDL2
  -llibcurl
  -llibmosquitto
  -D LV_CONF_SKIP
  -D LV_HOR_RES_MAX=540
  -D LV_VER_RES_MAX=960
  -D LV_MEM_CUSTOM=1
  -D LV_USE_USER_DATA=1
  -D LV_LVGL_H_INCLUDE_SIMPLE
  -D LV_DRV_NO_CONF
  -D USE_MONITOR
  -D USE_MOUSE
  -D NATIVE_64BIT
  -D M5PAPER
  -D MONOCHROME
  -D BIG_THEME
  -D LV_FONT_MONTSERRAT_32=1
  -D LV_FONT_MONTSERRAT_22=1
  -D NO_BLUETOOTH
lib_archive = false
lib_deps =
  ${env.lib_deps}
  https://github.com/lvgl/lvgl.git#v7.11.0
  lv_drivers@~7.11.0
  ArduinoJson@>=6.15.2
src_filter =
  +<*>
  +<../hal/sdl2>

[env:emulator_m5core2]
platform = native@^1.1.3
extra_scripts = support/sdl2_build_extra.py
build_flags =
  ${env.build_flags}
  ; Add recursive dirs for hal headers search
  ;!python -c "import os; print(' '.join(['-I {}'.format(i[0].replace('\x5C','/')) for i in os.walk('hal/sdl2')]))"
  -lSDL2
  -llibcurl
  -llibmosquitto
  -D LV_CONF_SKIP
  -D LV_HOR_RES_MAX=320
  -D LV_VER_RES_MAX=240
  -D LV_MEM_CUSTOM=1
  -D LV_USE_USER_DATA=1
  -D LV_LVGL_H_INCLUDE_SIMPLE
  -D LV_DRV_NO_CONF
  -D USE_MONITOR
  -D MONITOR_ZOOM=2
  -D USE_MOUSE
  -D NATIVE_64BIT
  -D M5CORE2
  -D LV_FONT_MONTSERRAT_32=1
  -D LV_FONT_MONTSERRAT_22=1
  -D NO_BLUETOOTH
lib_archive = false
lib_deps =
  ${env.lib_deps}
  https://github.com/lvgl/lvgl.git#v7.11.0
  lv_drivers@~7.11.0
  ArduinoJson@>=6.15.2
src_filter =
  +<*>
  +<../hal/sdl2>

[env:emulator_twatch2021]
platform = native@^1.1.3
extra_scripts = support/sdl2_build_extra.py
build_flags =
  ${env.build_flags}
  ; Add recursive dirs for hal headers search
  ;!python -c "import os; print(' '.join(['-I {}'.format(i[0].replace('\x5C','/')) for i in os.walk('hal/sdl2')]))"
  -lSDL2
  -llibcurl
  -llibmosquitto
  -D LV_CONF_SKIP
  -D LV_HOR_RES_MAX=240
  -D LV_VER_RES_MAX=240
  -D LV_MEM_CUSTOM=1
  -D LV_USE_USER_DATA=1
  -D LV_LVGL_H_INCLUDE_SIMPLE
  -D LV_DRV_NO_CONF
  -D USE_MONITOR
  -D MONITOR_ZOOM=2
  -D USE_MOUSE
  -D NATIVE_64BIT
  -D LILYGO_WATCH_2021
  -D ROUND_DISPLAY
  -D ONLY_ESSENTIAL
  -D LV_FONT_MONTSERRAT_32=1
  -D LV_FONT_MONTSERRAT_22=1
  -D NO_BLUETOOTH
lib_archive = false
lib_deps =
  ${env.lib_deps}
  https://github.com/lvgl/lvgl.git#v7.11.0
  lv_drivers@~7.11.0
  ArduinoJson@>=6.15.2
src_filter =
  +<*>
  +<../hal/sdl2>

[env:emulator_twatch2020]
platform = native@^1.1.3
extra_scripts = support/sdl2_build_extra.py
build_flags =
  ${env.build_flags}
  ; Add recursive dirs for hal headers search
  ;!python -c "import os; print(' '.join(['-I {}'.format(i[0].replace('\x5C','/')) for i in os.walk('hal/sdl2')]))"
  -lSDL2
  -llibcurl
  -llibmosquitto
  -D LV_CONF_SKIP
  -D LV_HOR_RES_MAX=240
  -D LV_VER_RES_MAX=240
  -D LV_MEM_CUSTOM=1
  -D LV_USE_USER_DATA=1
  -D LV_LVGL_H_INCLUDE_SIMPLE
  -D LV_DRV_NO_CONF
  -D USE_MONITOR
  -D MONITOR_ZOOM=2
  -D USE_MOUSE
  -D NATIVE_64BIT
  -D LILYGO_WATCH_2020_V1
  -D NO_BLUETOOTH
lib_archive = false
lib_deps =
  ${env.lib_deps}
  https://github.com/lvgl/lvgl.git#v7.7.2
  lv_drivers@~7.11.0
  ArduinoJson@>=6.15.2
src_filter =
  +<*>
  +<../hal/sdl2>

[env:m5paper]
; overrides the default arduino-esp32 framework with an custom built arduino-esp32 framework
; the custom arduino-esp32 framework provides better power managment, dynamic frquency scaling and 80Mhz Flash/SPIRAM support
; built from https://github.com/espressif/esp32-arduino-lib-builder
platform_packages = framework-arduinoespressif32 @ https://github.com/sharandac/arduino-esp32-hedge.git
platform = espressif32@3.3.0
board = m5stack-fire
framework = arduino
lib_archive = true
board_build.f_flash = 80000000L
board_build.flash_mode = qio
monitor_speed = 115200
monitor_filters = 
    default
    esp32_exception_decoder
board_build.partitions = default_16MB.csv
board_build.embed_txtfiles = 
    src/gui/mainbar/setup_tile/time_settings/timezones.json
    src/utils/osm_map/osmtileserver.json
build_flags = 
    -D M5PAPER
    -D BIG_THEME
    -D LV_LVGL_H_INCLUDE_SIMPLE
    -DCORE_DEBUG_LEVEL=3
    -DBOARD_HAS_PSRAM
    -mfix-esp32-psram-cache-issue
    -ffunction-sections
    -fdata-sections
    -Wl,--gc-sections
    -Os
src_filter = 
	+<*>
lib_deps =
    m5stack/M5EPD
    https://github.com/lvgl/lvgl.git#v7.11.0
    ESP Async WebServer@>=1.2.0
    AsyncTCP@>=1.1.1
    ArduinoJson@>=6.15.2
    luc-github/ESP32SSDP
    https://github.com/tobozo/ESP32-targz/archive/refs/heads/1.0.5-beta.zip
    PubSubClient@>=2.8
    https://github.com/linuxthor/LibSSH-ESP32/archive/1.2.3.tar.gz
    ESP32Ping @>=1.5
    mikalhart/TinyGPSPlus
    plerup/espsoftwareserial

[env:m5core2]
; overrides the default arduino-esp32 framework with an custom built arduino-esp32 framework
; the custom arduino-esp32 framework provides better power managment, dynamic frquency scaling and 80Mhz Flash/SPIRAM support
; built from https://github.com/espressif/esp32-arduino-lib-builder
platform_packages = framework-arduinoespressif32 @ https://github.com/sharandac/arduino-esp32-hedge.git
platform = espressif32@3.3.0
board = m5stack-fire
framework = arduino
lib_archive = true
board_build.f_flash = 80000000L
board_build.flash_mode = qio
monitor_speed = 115200
monitor_filters = 
    default
    esp32_exception_decoder
board_build.embed_txtfiles = 
    src/gui/mainbar/setup_tile/time_settings/timezones.json
    src/utils/osm_map/osmtileserver.json
build_flags = 
    -D M5CORE2
    -D LV_LVGL_H_INCLUDE_SIMPLE
    -DCORE_DEBUG_LEVEL=3
    -DBOARD_HAS_PSRAM
    -mfix-esp32-psram-cache-issue
    -ffunction-sections
    -fdata-sections
    -Wl,--gc-sections
    -Os
src_filter = 
    +<*>
lib_deps =
    m5stack/M5Core2
    https://github.com/lvgl/lvgl.git#v7.11.0
    ESP Async WebServer@>=1.2.0
    AsyncTCP@>=1.1.1
    ArduinoJson@>=6.15.2
    luc-github/ESP32SSDP
    https://github.com/tobozo/ESP32-targz/archive/refs/heads/1.0.5-beta.zip
    PubSubClient@>=2.8
    earlephilhower/ESP8266Audio
    earlephilhower/ESP8266SAM
    mikalhart/TinyGPSPlus
    plerup/espsoftwareserial
    ESP32Ping @>=1.5
    https://github.com/linuxthor/LibSSH-ESP32/archive/1.2.3.tar.gz
    https://github.com/mobizt/ESP-Mail-Client.git

[env:t-watch2021]
; overrides the default arduino-esp32 framework with an custom built arduino-esp32 framework
; the custom arduino-esp32 framework provides better power managment, dynamic frquency scaling and 80Mhz Flash/SPIRAM support
; built from https://github.com/espressif/esp32-arduino-lib-builder
platform_packages = framework-arduinoespressif32 @ https://github.com/linuxthor/arduino-esp32-hedge.git
platform = espressif32@3.3.0
board = esp32dev
framework = arduino
lib_archive = true
board_build.f_flash = 40000000L
board_build.flash_mode = dio
monitor_speed = 115200
monitor_filters = 
    default
    esp32_exception_decoder
board_build.partitions = twatch2021_8MB.csv
board_build.embed_txtfiles = 
    src/gui/mainbar/setup_tile/time_settings/timezones.json
    src/utils/osm_map/osmtileserver.json
build_flags = 
    -DUSER_SETUP_LOADED=1
    -DGC9A01_DRIVER=1
    -DTFT_WIDTH=240
    -DTFT_HEIGHT=240
    -DTFT_MISO=-1
    -DTFT_MOSI=13
    -DTFT_SCLK=14
    -DTFT_CS=15
    -DTFT_DC=19
    -DTFT_RST=27
    -DTFT_LED=21
    -DSPI_FREQUENCY=40000000
    -D LILYGO_WATCH_2021
    -D LV_LVGL_H_INCLUDE_SIMPLE
    -DCORE_DEBUG_LEVEL=3
    -ffunction-sections
    -fdata-sections
    -Wl,--gc-sections
    -Os
src_filter = 
	+<*>
lib_deps =
;    TTGO TWatch Library@=1.4.2
;    https://github.com/lvgl/lvgl.git#v7.7.2
    https://github.com/dervomsee/TTGO_TWatch_Library/archive/refs/heads/lvgl_update.zip
    https://github.com/lvgl/lvgl.git#v7.11.0
    ESP Async WebServer@>=1.2.0
    AsyncTCP@>=1.1.1
    ArduinoJson@>=6.15.2
    luc-github/ESP32SSDP
    https://github.com/tobozo/ESP32-targz/archive/refs/heads/1.0.5-beta.zip
    PubSubClient@>=2.8
    Bodmer/TFT_eSPI
    lewisxhe/PCF8563_Library
    mikalhart/TinyGPSPlus
    plerup/espsoftwareserial
    ESP32Ping @>=1.5
    https://github.com/linuxthor/LibSSH-ESP32/archive/1.2.3.tar.gz
    https://github.com/mobizt/ESP-Mail-Client.git

[env:t-watch2020-v1]
; overrides the default arduino-esp32 framework with an custom built arduino-esp32 framework
; the custom arduino-esp32 framework provides better power managment, dynamic frquency scaling and 80Mhz Flash/SPIRAM support
; built from https://github.com/espressif/esp32-arduino-lib-builder
platform_packages = framework-arduinoespressif32 @ https://github.com/sharandac/arduino-esp32-hedge.git
platform = espressif32@3.3.0
board = ttgo-t-watch
framework = arduino
lib_archive = true
board_build.f_flash = 80000000L
board_build.flash_mode = qio
monitor_speed = 115200
monitor_filters = 
    default
    esp32_exception_decoder
board_build.embed_txtfiles = 
    src/gui/mainbar/setup_tile/time_settings/timezones.json
    src/utils/osm_map/osmtileserver.json
src_filter = 
    +<*>
lib_deps = 
;    TTGO TWatch Library@=1.4.2
;    https://github.com/lvgl/lvgl.git#v7.7.2
    https://github.com/dervomsee/TTGO_TWatch_Library/archive/refs/heads/lvgl_update.zip
    https://github.com/lvgl/lvgl.git#v7.11.0
    ESP Async WebServer@>=1.2.0
    AsyncTCP@>=1.1.1
    ArduinoJson@>=6.15.2
    luc-github/ESP32SSDP
    IRremoteESP8266@>=2.7.10
    PubSubClient@>=2.8
    ESP32Ping @>=1.5
    earlephilhower/ESP8266Audio@1.9.5
    earlephilhower/ESP8266SAM
    https://github.com/tobozo/ESP32-targz/archive/refs/heads/1.0.5-beta.zip
    https://github.com/mobizt/ESP-Mail-Client.git
    https://github.com/linuxthor/LibSSH-ESP32/archive/1.2.3.tar.gz
    mikalhart/TinyGPSPlus
    plerup/espsoftwareserial
build_flags = 
    -DCORE_DEBUG_LEVEL=3
    -D LILYGO_WATCH_2020_V1
    -mfix-esp32-psram-cache-issue
    -ffunction-sections
    -fdata-sections
    -Wl,--gc-sections
    -Os

[env:t-watch2020-v2]
; overrides the default arduino-esp32 framework with an custom built arduino-esp32 framework
; the custom arduino-esp32 framework provides better power managment, dynamic frquency scaling and 80Mhz Flash/SPIRAM support
; built from https://github.com/espressif/esp32-arduino-lib-builder
platform_packages = framework-arduinoespressif32 @ https://github.com/linuxthor/arduino-esp32-hedge.git
platform = espressif32@3.3.0
board = ttgo-t-watch
framework = arduino
lib_archive = true
board_build.f_flash = 80000000L
board_build.flash_mode = qio
monitor_speed = 115200
monitor_filters = 
    default
    esp32_exception_decoder
board_build.embed_txtfiles = 
    src/gui/mainbar/setup_tile/time_settings/timezones.json
    src/utils/osm_map/osmtileserver.json
src_filter = 
    +<*>
lib_deps = 
    TTGO TWatch Library@=1.4.2
    https://github.com/lvgl/lvgl.git#v7.7.2
    ESP Async WebServer@>=1.2.0
    AsyncTCP@>=1.1.1
    ArduinoJson@>=6.15.2
    luc-github/ESP32SSDP
    IRremoteESP8266@>=2.7.10
    PubSubClient@>=2.8
    ESP32Ping @>=1.5
    https://github.com/tobozo/ESP32-targz/archive/refs/heads/1.0.5-beta.zip
    https://github.com/mobizt/ESP-Mail-Client.git
    https://github.com/linuxthor/LibSSH-ESP32/archive/1.2.3.tar.gz
    mikalhart/TinyGPSPlus
    plerup/espsoftwareserial
build_flags = 
    -DCORE_DEBUG_LEVEL=3
    -D LILYGO_WATCH_2020_V2
    -mfix-esp32-psram-cache-issue
    -ffunction-sections
    -fdata-sections
    -Wl,--gc-sections
    -Os

[env:t-watch2020-v3]
; overrides the default arduino-esp32 framework with an custom built arduino-esp32 framework
; the custom arduino-esp32 framework provides better power managment, dynamic frquency scaling and 80Mhz Flash/SPIRAM support
; built from https://github.com/espressif/esp32-arduino-lib-builder
platform_packages = framework-arduinoespressif32 @ https://github.com/linuxthor/arduino-esp32-hedge.git
platform = espressif32@3.3.0
board = ttgo-t-watch
framework = arduino
lib_archive = true
board_build.f_flash = 80000000L
board_build.flash_mode = qio
monitor_speed = 115200
monitor_filters = 
    default
    esp32_exception_decoder
board_build.embed_txtfiles = 
    src/gui/mainbar/setup_tile/time_settings/timezones.json
    src/utils/osm_map/osmtileserver.json
src_filter = 
    +<*>
lib_deps = 
    TTGO TWatch Library@=1.4.2
    https://github.com/lvgl/lvgl.git#v7.7.2
    ESP Async WebServer@>=1.2.0
    ESP32Ping @>=1.5
    AsyncTCP@>=1.1.1
    ArduinoJson@>=6.15.2
    luc-github/ESP32SSDP
    IRremoteESP8266@>=2.7.10
    PubSubClient@>=2.8
    earlephilhower/ESP8266Audio
    https://github.com/tobozo/ESP32-targz/archive/refs/heads/1.0.5-beta.zip
    https://github.com/mobizt/ESP-Mail-Client.git
    https://github.com/linuxthor/LibSSH-ESP32/archive/1.2.3.tar.gz
    mikalhart/TinyGPSPlus
    plerup/espsoftwareserial
build_flags = 
    -DCORE_DEBUG_LEVEL=3
    -D LILYGO_WATCH_2020_V3
    -mfix-esp32-psram-cache-issue
    -ffunction-sections
    -fdata-sections
    -Wl,--gc-sections
    -Os

